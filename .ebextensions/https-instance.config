packages:
  yum:
    mod24_ssl : []

files:
  /etc/httpd/conf.d/ssl.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
      #   Set up WSGI:
      LoadModule wsgi_module modules/mod_wsgi.so
      WSGIPythonHome /opt/python/run/baselinenv
      WSGISocketPrefix run/wsgi
      WSGIRestrictEmbedded On

      Listen 443
      #   Inter-Process Session Cache:
      #   Configure the SSL Session Cache: First the mechanism
      #   to use and second the expiring timeout (in seconds).
      SSLSessionCache         shmcb:/run/httpd/sslcache(512000)
      SSLSessionCacheTimeout  300

      #   Pseudo Random Number Generator (PRNG):
      #   Configure one or more sources to seed the PRNG of the
      #   SSL library. The seed data should be of good random quality.
      #   WARNING! On some platforms /dev/random blocks if not enough entropy
      #   is available. This means you then cannot use the /dev/random device
      #   because it would lead to very long connection times (as long as
      #   it requires to make more entropy available). But usually those
      #   platforms additionally provide a /dev/urandom device which doesn't
      #   block. So, if available, use this one instead. Read the mod_ssl User
      #   Manual for more details.
      SSLRandomSeed startup file:/dev/urandom  256
      SSLRandomSeed connect builtin
      <VirtualHost *:443>
        SSLEngine on

        #   List the protocol versions which clients are allowed to connect with.
        #   Disable SSLv3 by default (cf. RFC 7525 3.1.1).  TLSv1 (1.0) should be
        #   disabled as quickly as practical.  By the end of 2016, only the TLSv1.2
        #   protocol or later should remain in use.
        SSLProtocol all -SSLv3
        SSLProxyProtocol all -SSLv3

        #   User agents such as web browsers are not configured for the user's
        #   own preference of either security or performance, therefore this
        #   must be the prerogative of the web server administrator who manages
        #   cpu load versus confidentiality, so enforce the server's cipher order.
        SSLHonorCipherOrder on

        #   SSL Protocol Adjustments:
        #   The safe and default but still SSL/TLS standard compliant shutdown
        #   approach is that mod_ssl sends the close notify alert but doesn't wait for
        #   the close notify alert from client. When you need a different shutdown
        #   approach you can use one of the following variables:
        #   o ssl-unclean-shutdown:
        #     This forces an unclean shutdown when the connection is closed, i.e. no
        #     SSL close notify alert is send or allowed to received.  This violates
        #     the SSL/TLS standard but is needed for some brain-dead browsers. Use
        #     this when you receive I/O errors because of the standard approach where
        #     mod_ssl sends the close notify alert.
        #   o ssl-accurate-shutdown:
        #     This forces an accurate shutdown when the connection is closed, i.e. a
        #     SSL close notify alert is send and mod_ssl waits for the close notify
        #     alert of the client. This is 100% SSL/TLS standard compliant, but in
        #     practice often causes hanging connections with brain-dead browsers. Use
        #     this only for browsers where you know that their SSL implementation
        #     works correctly.
        #   Notice: Most problems of broken clients are also related to the HTTP
        #   keep-alive facility, so you usually additionally want to disable
        #   keep-alive for those clients, too. Use variable "nokeepalive" for this.
        #   Similarly, one has to force some clients to use HTTP/1.0 to workaround
        #   their broken HTTP/1.1 implem
        BrowserMatch "MSIE [2-5]" \
         nokeepalive ssl-unclean-shutdown \
         downgrade-1.0 force-response-1.0

        #   LetsEncrypt certs.
        SSLCertificateFile /etc/letsencrypt/live/subreddit-algebra.science/fullchain.pem
        SSLCertificateKeyFile /etc/letsencrypt/live/subreddit-algebra.science/privkey.pem

        Alias /static/ /var/www/html/static/
        <Directory /var/www/html/static/>
        Order allow,deny
        Allow from all
        </Directory>

        WSGIScriptAlias /api /opt/python/current/app/subreddit_algebra_app.wsgi

        <Directory /opt/python/current/app>
        Require all granted
        </Directory>

        WSGIDaemonProcess wsgi-ssl processes=1 threads=30 display-name=%{GROUP} \
          python-path=/opt/python/current/app:/opt/python/run/venv/lib64/python3.4/site-packages:/opt/python/run/venv/lib/python3.4/site-packages \
          home=/opt/python/current/app \
          user=wsgi \
          group=wsgi
        WSGIProcessGroup wsgi-ssl
        WSGIImportScript /opt/python/current/app/subreddit_algebra_app.wsgi process-group=wsgi-ssl application-group=%{GLOBAL}
      </VirtualHost>
      LogFormat "%h (%{X-Forwarded-For}i) %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined

container_commands:
  01killhttpd:
    command: "sudo service httpd restart"
